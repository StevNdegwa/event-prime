{"version":3,"sources":["app/components/Home/styles.js","app/components/styles.js","app/components/Header.jsx","app/components/Home/index.js","app/components/Home/Home.jsx","app/components/CreateEvent/styles.js","app/components/CreateEvent/createeventstyle.js","app/components/CreateEvent/SignIn.jsx","app/components/CreateEvent/SignUp.jsx","app/components/CreateEvent/index.js","app/components/CreateEvent/CreateEvent.jsx","app/App.js","serviceWorker.js","index.js"],"names":["Wrapper","styled","div","MyHeader","header","Nav","nav","MyLink","NavLink","Button","button","LoaderRotate","keyframes","Loader","props","size","color","Header","to","activeStyle","Home","SignContent","Form","form","Input","input","Label","label","confirmed","css","ConfirmInput","Content","LabeledInput","SubmitButton","SignIn","method","onSubmit","evt","preventDefault","htmlFor","type","name","placeholder","SignUp","React","useState","confirmPage","openConfirmPage","email","fname","lname","password","setForm","cform","setCForm","loading","setLoading","handleChanges","target","value","handleConfirmChanges","fetch","headers","body","JSON","stringify","user","then","response","json","console","log","added","catch","error","pattern","title","onChange","required","CreateEvent","App","forceRefresh","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.3efe8931.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\ngrid-column:1 / span 6;\r\nwidth:100%;\r\ndisplay:flex;\r\nflex-direction:column;\r\n@media only screen and (max-width:600px){\r\ngrid-column:1 / span 10;\r\n}\r\n`;","import styled, {keyframes} from \"styled-components\";\r\n\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nexport const MyHeader = styled.header`\r\ndisplay:flex;\r\njustify-content:space-between;\r\nwidth:100%;\r\nheight:60px;\r\npadding:0 1em;\r\nborder-bottom:1px solid #616161;\r\ngrid-column:1 / span 6;\r\ngrid-row-start:1;\r\n@media only screen and (max-width:600px){\r\ngrid-column:1 / span 10;\r\n}\r\n`;\r\n\r\nexport const Nav = styled.nav`\r\nheight:100%;\r\n`;\r\n\r\nexport const MyLink = styled(NavLink)`\r\ndisplay:inline-block;\r\nheight:60px;\r\nline-height:60px;\r\npadding:0 0.5em;\r\nfont-weight:600;\r\ncolor:#616161;\r\ntext-decoration:none;\r\n&:focus{\r\n  background-color:#f5f5f5;\r\n}\r\n`;\r\n\r\nexport const Button = styled.button`\r\nheight:40px;\r\ncolor:white;\r\nfont-weight:bold;\r\nbackground-color:#0288d1;\r\nborder:1px outset #0288d1;\r\nborder:none;\r\nborder-radius:5px;\r\npadding:0 0.5em;\r\ntext-transform:uppercase;\r\ncursor:pointer;\r\nmargin:0.25em;\r\n`;\r\n\r\nconst LoaderRotate = keyframes`\r\nfrom:{\r\n  transform:rotate(0deg);\r\n}\r\nto{\r\n  transform:rotate(360deg);\r\n}\r\n`;\r\n\r\nexport const Loader = styled.div`\r\nbackground-color:white;\r\nborder:10px solid #eceff1;\r\nborder-radius:50%;\r\nanimation:${LoaderRotate} 2s linear infinite;\r\nwidth:${props=>(props.size || \"40px\")};\r\nheight:${props=>(props.size || \"40px\")};\r\nborder-top-color:${props=>(props.color || \"#81d4fa\")};\r\n`;","import React from \"react\";\r\n\r\nimport {MyHeader, MyLink, Nav} from \"./styles\";\r\n\r\nexport default function Header(){\r\n  return (<MyHeader>\r\n    <MyLink to=\"/\"> eventprime </MyLink>\r\n    <Nav>\r\n      <MyLink to=\"/newevent\" activeStyle={{color:\"blue\"}}> Create Event </MyLink>\r\n      <MyLink to=\"/signup\" activeStyle={{color:\"blue\"}}>Sign Up</MyLink>\r\n    </Nav>\r\n   </MyHeader>)\r\n}","import Home from \"./Home.jsx\";\r\nexport default Home;","import React from \"react\";\r\n\r\nimport {Wrapper} from \"./styles\";\r\nimport Header from \"../Header.jsx\";\r\n\r\nexport default function Home(){\r\n  return (<Wrapper>\r\n   <Header/>\r\r\n  </Wrapper>)\r\n}","import styled, {css} from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\ngrid-column:1 / span 6;\r\nwidth:100%;\r\n@media only screen and (max-width:600px){\r\ngrid-column:1 / span 10;\r\n}\r\n`;\r\n\r\nexport const SignContent = styled.div`\r\ngrid-column-start:3;\r\nwidth:320px;\r\nmargin:20px auto;\r\nborder:1px outset gray;\r\nborder-radius:10px;\r\ndisplay:flex;\r\nflex-direction:column;\r\nalign-items:center;\r\njustify-content:center;\r\n`;\r\n\r\nexport const Form = styled.form`\r\nwidth:90%;\r\n`;\r\n\r\nexport const Input = styled.input`\r\nheight:40px;\r\nwidth:100%;\r\nline-height:40px;\r\npadding:0 0.25em;\r\nborder-radius:5px;\r\nmargin:5px 0;\r\nborder:1px solid grey;\r\noutline:none;\r\ndisplay:block;\r\n`;\r\n\r\nexport const Label = styled.label`\r\nfont-size:0.8em;\r\nfont-weight:600;\r\n${props=>(props.confirmed && css`\r\n&::after{\r\n  content:\"confirmed\";\r\n  color:#76ff03;\r\n}\r\n`)}\r\n`;\r\n\r\nexport const ConfirmInput = styled(Input)`\r\nborder-color:red;\r\n${props=>(props.confirmed && css`\r\nborder-color:grey;\r\n`)}\r\n`;","import styled from \"styled-components\";\r\n\r\nimport {Button} from \"../styles\";\r\n\r\nexport const Content = styled.div`\r\nwidth:100%;\r\nbackground-color:#eceff1;\r\npadding:0.5em;\r\ngrid-column-start:1;\r\ndisplay:grid;\r\n`;\r\n\r\nexport const Form = styled.form`\r\ndisplay:grid;\r\n`;\r\n\r\nexport const Input = styled.input`\r\nheight:50px;\r\nborder:none;\r\nborder-bottom:2px solid blacK;\r\noutline:none;\r\nfont-size:1.3em;\r\ndisplay:block;\r\nbackground-color:#eceff1;\r\n`;\r\n\r\nexport const Label = styled.label`\r\nfont-weight:700;\r\n`;\r\n\r\nexport const LabeledInput = styled.div`\r\ngrid-column-start:1;\r\ngrid-row-start:1;\r\n`;\r\n\r\nexport const SubmitButton = styled(Button)`\r\ngrid-column-start:5;\r\ngrid-row-start:2;\r\n@media only screen and (max-width:600px){\r\ngrid-column-start:1;\r\n}\r\n`;","import React from \"react\";\r\n\r\nimport Header from \"../Header.jsx\";\r\n\r\nimport {Wrapper, Input, SignContent, Label, Form} from \"./styles\";\r\nimport {MyLink, Button} from \"../styles\";\r\n\r\nexport default function SignIn(){\r\n  function handleSubmit(evt){\r\n    evt.preventDefault();\r\n  }\r\n  return (<Wrapper>\r\n    <Header/>\r\n    <SignContent>\r\n      <Form method=\"POST\" onSubmit={handleSubmit}>\r\n        <Label htmlFor=\"email\">Email: </Label>\r\n        <Input type=\"email\" name=\"email\" placeholder=\"User email\"/>\r\n        <Label htmlFor=\"password\">Password: </Label>\r\n        <Input type=\"password\" name=\"password\" placeholder=\"User Password\"/>\r\n        <Button type=\"submit\">Log In</Button>\r\n      </Form>\r\n      <div><br/>\r\n      <p>Don't have an account?</p>\r\n        <MyLink to=\"/signup\">SIGN UP</MyLink>\r\n     </div>\r\n    </SignContent>\r\n  </Wrapper>)\r\n}","import React from \"react\";\r\nimport fetch from \"cross-fetch\";\r\n\r\nimport Header from \"../Header.jsx\";\r\n\r\nimport {Wrapper, SignContent, Input, ConfirmInput, Label, Form} from \"./styles\";\r\nimport {MyLink, Button, Loader} from \"../styles\";\r\n\r\nexport default function SignUp(){\r\n  const [confirmPage, openConfirmPage] = React.useState(false);\r\n  const [form, setForm] = React.useState({email:\"\",fname:\"\", lname:\"\", password:\"\"});\r\n  const [cform, setCForm] = React.useState({email:\"\", password:\"\"});\r\n  const [loading, setLoading] = React.useState(false);\r\n  \r\n  \r\n  function handleChanges(evt){\r\n    var {value, name} = evt.target;\r\n    \r\n    setForm({...form, [name]:value})\r\n  }\r\n  \r\n  function handleSubmit(evt){\r\n    evt.preventDefault();\r\n    openConfirmPage(true);\r\n  }\r\n  \r\n  function handleConfirmChanges(evt){\r\n    var {value, name} = evt.target;\r\n    \r\n    setCForm({...cform, [name]:value});\r\n  }\r\n  \r\n  function fullSubmit(evt){\r\n    evt.preventDefault();\r\n    setLoading(true);\r\n    return fetch(\"http://localhost:7000/user/signup\", {\r\n      method:\"PUT\", \r\n      headers:{\r\n        \"Content-type\":\"application/json\"\r\n      },\r\n      body:JSON.stringify({user:form})\r\n     })\r\n     .then((response)=>{\r\n        return response.json();\r\n     })\r\n     .then((body)=>{\r\n       console.log(body)\r\n       if(body.added){\r\n         \r\n         \r\n         \r\n       }\r\n        setLoading(false);\r\n     }).catch((error)=>{\r\n       \r\n       setLoading(false);\r\n     })\r\n  }\r\n  \r\n  return (<Wrapper>\r\n    <Header/>\r\n    <SignContent>\r\n    {loading&&<Loader/>}\r\n    {confirmPage ? <Form method=\"PUT\" onSubmit={fullSubmit}>\r\n      <Label htmlFor=\"email\" confirmed={form.email === cform.email}>Email: </Label>\r\n      <ConfirmInput type=\"email\" confirmed={form.email === cform.email} placeholder=\"Confirm Email\" pattern={form.email} name=\"email\" title=\"Your emails should match\" value={cform.email} onChange={handleConfirmChanges} required/>\r\n      <Label htmlFor=\"email\" confirmed={form.password === cform.password}>Password:</Label>\r\n      <ConfirmInput type=\"password\" confirmed={form.password === cform.password} placeholder=\"Confirm password\" pattern={form.password} name=\"password\" title=\"Your password should match\" value={cform.password} onChange={handleConfirmChanges} required/>\r\n      <Button type=\"submit\">Sign Up</Button>\r\n     </Form> :<>\r\n     <Form method=\"POST\" onSubmit={handleSubmit}>\r\n      <Label htmlFor=\"email\">Email: </Label>\r\n      <Input type=\"email\" placeholder=\"Email\" name=\"email\" value={form.email || \"\"} onChange={handleChanges} required/>\r\n      <Label htmlFor=\"fname\">First Name: </Label>\r\n      <Input type=\"text\" placeholder=\"First name\" name=\"fname\" value={form.fname || \"\"} onChange={handleChanges} required/>\r\n      <Label htmlFor=\"lname\">Last Name: </Label>\r\n      <Input type=\"text\" placeholder=\"Last name\" name=\"lname\" value={form.lname || \"\"} onChange={handleChanges} required/>\r\n      <Label htmlFor=\"password\">Password: </Label>\r\n      <Input type=\"password\" placeholder=\"Password\" name=\"password\" value={form.password || \"\"} onChange={handleChanges} required/>\r\n      <Button type=\"submit\">Confirm</Button>\r\n     </Form>\r\n     <div><br/>\r\n      <p>Already have an account?</p>\r\n        <MyLink to=\"/signin\">SIGN IN</MyLink>\r\n     </div>\r\n    </>\r\n   }\r\n   </SignContent>\r\n  </Wrapper>)\r\n}","import CreateEvent from \"./CreateEvent.jsx\";\r\nimport SignIn from \"./SignIn.jsx\";\r\nimport SignUp from \"./SignUp.jsx\";\r\n\r\nexport {SignIn, SignUp};\r\nexport default CreateEvent;","import React from \"react\";\r\n\r\nimport Header from \"../Header.jsx\";\r\nimport {Wrapper} from \"./styles\";\r\nimport {Content, Input, Label, Form, SubmitButton, LabeledInput} from \"./createeventstyle\";\r\n\r\nexport default function CreateEvent(){\r\n  \r\n  function handleSubmit(evt){\r\n    evt.preventDefault();\r\n  }\r\n  \r\n  return (<Wrapper>\r\n    <Header/>\r\n    <Content>\r\n      <Form method=\"POST\" onSubmit={handleSubmit}>\r\n        <LabeledInput>\r\n          <Label htmlFor=\"eventname\">Event Name: </Label>\r\n          <Input type=\"text\" name=\"eventname\" placeholder=\"Event name...\"/>\r\n        </LabeledInput>\r\n        <SubmitButton type=\"submit\">Create Event</SubmitButton>\r\n      </Form>\r\n    </Content>\r\n  </Wrapper>)\r\n}","import React from 'react';\n\nimport {BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\n\nimport Home from \"./components/Home\";\nimport CreateEvent, {SignUp, SignIn} from \"./components/CreateEvent\";\n\nfunction App() {\n  return (<>\n    <Router forceRefresh={false}>\n      <Switch>\n        <Route exact path=\"/newevent\" component={CreateEvent}/>\n        <Route exact path=\"/signup\" component={SignUp}/>\n        <Route exact path=\"/signin\" component={SignIn}/>\n        <Route exact path=\"/\" component={Home}/>\n      </Switch>\n    </Router>\n   </>);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport \"./index.scss\";\n\nimport App from './app/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}